---

- name: Download Percona package
  get_url:
    url="https://repo.percona.com/apt/percona-release_latest.generic_all.deb"
    dest="/percona-release_latest.generic_all.deb"
  register: percona_package_check_deb

- name: Install Percona package
  apt: deb="/percona-release_latest.generic_all.deb"
  when: percona_package_check_deb.changed == 1

- name: update cache
  apt:
    update_cache: yes
  when: percona_package_check_deb.changed == 1

- name: Setup percona cluster
  shell: percona-release setup pxc80
  when: percona_package_check_deb.changed == 1

- name: General | Install required packages.
  apt:
    name:
      - percona-xtradb-cluster
      - python3-mysqldb
      - percona-xtrabackup-80
    state: present
    update-cache: yes
    cache_valid_time: 3600
  register: "mysql_freshly_installed"

- name: General | Install required packages.
  apt:
    name:
      - apparmor
    state: absent
    purge: true
  register: "apparmor_removed"

- name: Make the apparmor removal at play
  reboot:
  when: apparmor_removed.changed == 1

- debug:
    msg: "The value of mysql_freshly_installed is {{ mysql_freshly_installed }}"

- name: MySQL | update default mysql mode for mysql 8
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^sql_mode'
    insertafter: '[mysqld]'
    line: 'sql_mode=NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'
  when: ansible_distribution == 'Ubuntu' and  ansible_lsb.major_release|int >= 16
  notify: Restart mysql

- name: listen on localhost only by default
  lineinfile:
    insertafter: '[mysqld]'
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    line: "bind-address = {{ mysql_bind_address }}"
  notify: Restart mysql

- name: disable mysqlx service
  lineinfile:
    insertafter: '[mysqld]'
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    line: mysqlx=0
  notify: Restart mysql

- name: Cluster | dont specify node name, make it use sytem's hostname
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^wsrep_node_name'
    state: absent
  notify: Restart mysql

- name: Cluster | set node address
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^wsrep_node_address'
    line: "wsrep_node_address = {{ mysql_cluster_node_address }}"
  notify: Restart mysql

- name: Cluster | set wsrep_cluster_address
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^wsrep_cluster_address'
    line: "wsrep_cluster_address==gcomm://{{ play_hosts | join(',') }}"
  notify: Restart mysql

- name: Cluster | disable pxc traffic encryption (make sure you're sending traffic through vpn mesh or similar!)
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^pxc-encrypt-cluster-traffic'
    line: "pxc-encrypt-cluster-traffic=OFF"
  notify: Restart mysql

- name: Make sure mysql is started after a fresh cluster install
  service: name=mysql state=started
  when: mysql_freshly_installed.changed == 1

- include: mysql-users.yml