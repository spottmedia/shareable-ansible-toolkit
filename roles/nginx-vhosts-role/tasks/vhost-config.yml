- name: basic-auth routine
  block:

    - name: install pip
      apt:
        pkg:
          - python-pip
          - python-setuptools
          - python3-pip
          - python3-setuptools
        state: present
        update-cache: yes
        install_recommends: no
        cache_valid_time: 3600

    - name: install passlib pip for htpasswd
      pip:
        name: passlib
        executable: pip3

    - name: install passlib pip for htpasswd
      pip:
        name: passlib
        executable: pip


    - name: Check if we generated basic auth for this vhost
      stat:
        path: "/var/security/{{ item.server_name }}.htpasswd"
      register: stat_result

    - name: generate password string
      set_fact:
        basic_auth_pass: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"
      changed_when: false

    - name: generate htpasswd
      htpasswd:
        path: "/var/security/{{ item.server_name }}.htpasswd"
        name: "user"
        password: "{{ basic_auth_pass }}"
        owner: www-data
        group: www-data
        mode: 0660
      when: not stat_result.stat.exists  # do not attempt to regenerate the file

  when: item.use_auth is defined and item.use_auth == true

- name: Copy vhost
  template: src="{{ template }}" dest="/etc/nginx/sites-available/{{ server_name }}.conf" mode="u+x,g+x,o+x"
  notify: Reload Nginx

- name: etc/hosts entries to point to self
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 {{ item.server_name }} {{ item.server_aliases|join(' ') }}"
    state: present

- name: Enable vhost
  file:
    src: "/etc/nginx/sites-available/{{ server_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ server_name }}.conf"
    owner: www-data
    group: www-data
    state: link
  notify: Reload Nginx